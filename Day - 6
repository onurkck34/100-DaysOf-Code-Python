My def function(): print("Hello from a function!") As seen in the example,
the name of the function is given after the def statement (my function).
The parenthesis is opened, the parameters are written,
if any, and the parenthesis is closed. 
Then, when the function is called by putting a colon,
the codes that are requested to run are started to be written.

def my_function():
  print("Hello from a function")

my_function()
----------------------------------------------------------
Python Indentation Rules
The first line of python code cannot have an indentation.
Indentation is mandatory in python to define the blocks of statements.
The number of spaces must be uniform in a block of code.
It is preferred to use whitespaces instead of tabs to indent in python.

Examples : 
def my_name():
  print("Hello I am Onur")
  print("Hi! My name is Onur")
----------------------------------------------------------
The while Loop
With the while loop we can execute a set of statements as long as a condition is true.

Example
Print i as long as i is less than 6:

i = 1
while i < 6:
  print(i)
  i += 1

Note: remember to increment i, or else the loop will continue forever.

The while loop requires relevant variables to be ready, in this example we need to define an indexing variable, i, which we set to 1.
----------------------------------------------------------
The break Statement
With the break statement we can stop the loop even if the while condition is true:

Example
Exit the loop when i is 3:

i = 1
while i < 6:
  print(i)
  if i == 3:
    break
  i += 1
----------------------------------------------------------
The continue Statement
With the continue statement we can stop the current iteration, and continue with the next:

Example
Continue to the next iteration if i is 3:

i = 0
while i < 6:
  i += 1
  if i == 3:
    continue
  print(i)
----------------------------------------------------------
The else Statement
With the else statement we can run a block of code once when the condition no longer is true:

Example
Print a message once the condition is false:

i = 1
while i < 6:
  print(i)
  i += 1
else:
  print("i is no longer less than 6")
