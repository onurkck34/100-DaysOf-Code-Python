# IMPORTING MODULES
# import turtle
# tim = turtle.Turtle()

# from turtle import Turtle

# tim = Turtle()
# tom = Turtle()
# terry = Turtle()

import turtle as t

tim = t.Turtle()

import heroes
print(heroes.gen())
----------------------------------------------------------
# CHALLANGE - 1 | DRAW A SQUARE 

from turtle import Turtle, Screen

tim = Turtle()

for _ in range(4):
    tim.forward(100)
    tim.right(90)

screen = Screen()
screen.exitonclick()
----------------------------------------------------------
# CHALLENGE - 2 | DRAW A DASHED LINE
import turtle as t

tim = t.Turtle()

for _ in range(15):
    tim.forward(10)
    tim.penup()
    tim.forward(10)
    tim.pendown()
----------------------------------------------------------
# CHALLENGE - 3 | DRAWING DIFFERENT SHAPES
import turtle as t
import random

tim = t.Turtle()

colours = ["CornflowerBlue", "DarkOrchid", "IndianRed", "DeepSkyBlue", "LightSeaGreen", "wheat", "SlateGray", "SeaGreen"]

def draw_shape(num_sides):
    angle = 360 / num_sides
    for _ in range(num_sides):
        tim.forward(100)
        tim.right(angle)

for shape_side_n in range(3, 50):
    tim.color(random.choice(colours))
    draw_shape(shape_side_n)
----------------------------------------------------------
# CHALLENGE - 4 | GENERATE A RANDOM WALK
import turtle as t
import random

tim = t.Turtle()

colours = ["CornflowerBlue", "DarkOrchid", "IndianRed", "DeepSkyBlue", "LightSeaGreen", "wheat", "SlateGray", "SeaGreen"]
directions = [0, 90, 180, 270]
tim.pensize(15)
tim.speed("fastest")

for _ in range(200):
    tim.color(random.choice(colours))
    tim.forward(30)
    tim.setheading(random.choice(directions))
----------------------------------------------------------
# CHALLENGE - 5 | DRAW A SPIROGRAPH
import turtle as t
import random

tim = t.Turtle()
t.colormode(255)

def random_color():
    r = random.randint(0, 255)
    g = random.randint(0, 255)
    b = random.randint(0, 255)
    color = (r, g, b)
    return color

tim.speed("fastest")

def draw_spirograph(size_of_gap):
    for _ in range(int(360 / size_of_gap)):
        tim.color(random_color())
        tim.circle(100)
        tim.setheading(tim.heading() + size_of_gap)

draw_spirograph(5)

screen = t.Screen()
screen.exitonclick()
